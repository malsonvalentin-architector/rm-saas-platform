# Generated by AI Assistant on 2025-10-23 10:47
"""
Migration to use Railway Private Networking for Modbus Emulator.

This allows the rm-saas-platform service to connect to the emulator
using Railway's internal networking without exposing it publicly.

Railway Private Network format:
- Host: <service-name>.railway.internal  
- Port: Read from environment variable (Railway-provided dynamic port)

Environment variables required in rm-saas-platform service:
- MODBUS_EMULATOR_HOST=promonitor-modbus-emulator.railway.internal
- MODBUS_EMULATOR_PORT=${{ProMonitor-Modbus-Emulator.PORT}}
"""

import os
from django.db import migrations


def use_private_networking(apps, schema_editor):
    """Update ModbusConnection to use Railway private networking"""
    ModbusConnection = apps.get_model('data', 'ModbusConnection')
    
    connection = ModbusConnection.objects.filter(
        name="Enhanced Emulator v2.0"
    ).first()
    
    if connection:
        # Railway Private Network address
        # Format: <service-name>.railway.internal
        host = os.environ.get(
            'MODBUS_EMULATOR_HOST',
            'promonitor-modbus-emulator.railway.internal'
        )
        
        # Railway динамически назначает порт через переменную PORT
        # Мы ссылаемся на PORT эмулятора через service variable reference
        port = int(os.environ.get('MODBUS_EMULATOR_PORT', '5020'))
        
        old_host = connection.host
        old_port = connection.port
        
        connection.host = host
        connection.port = port
        connection.save()
        
        print(f"✅ Switched to Private Networking")
        print(f"   FROM: {old_host}:{old_port}")
        print(f"   TO:   {host}:{port}")
        print(f"   MODE: Railway Internal Network (secure, no bandwidth cost)")
    else:
        print("⚠️  Enhanced Emulator v2.0 connection not found in database")


def reverse_to_public(apps, schema_editor):
    """Откат к public URL (если понадобится)"""
    ModbusConnection = apps.get_model('data', 'ModbusConnection')
    
    connection = ModbusConnection.objects.filter(
        name="Enhanced Emulator v2.0"
    ).first()
    
    if connection:
        connection.host = "promonitor-modbus-emulator-production.up.railway.app"
        connection.port = 8000
        connection.save()
        print("⏪ Reverted to public URL")


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0017_update_emulator_connection'),
    ]

    operations = [
        migrations.RunPython(use_private_networking, reverse_to_public),
    ]
