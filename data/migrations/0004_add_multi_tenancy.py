# Generated by Django 5.2.7 on 2025-10-18 19:13

import datetime
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0003_atributes_alarm_atr'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название правила')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('condition', models.CharField(choices=[('>', 'Больше'), ('<', 'Меньше'), ('>=', 'Больше или равно'), ('<=', 'Меньше или равно'), ('==', 'Равно'), ('!=', 'Не равно')], max_length=5, verbose_name='Условие')),
                ('threshold', models.FloatField(verbose_name='Пороговое значение')),
                ('severity', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], max_length=20, verbose_name='Уровень')),
                ('notify_email', models.BooleanField(default=True, verbose_name='Email')),
                ('notify_telegram', models.BooleanField(default=False, verbose_name='Telegram')),
                ('notify_sms', models.BooleanField(default=False, verbose_name='SMS')),
                ('recipients', models.TextField(blank=True, default='[]', verbose_name='Получатели')),
                ('enabled', models.BooleanField(default=True, verbose_name='Включено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Правило тревоги',
                'verbose_name_plural': 'Правила тревог',
                'ordering': ['company', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название компании')),
                ('legal_name', models.CharField(blank=True, max_length=300, verbose_name='Юридическое название')),
                ('inn', models.CharField(blank=True, max_length=50, verbose_name='ИНН/БИН')),
                ('contact_person', models.CharField(max_length=200, verbose_name='Контактное лицо')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email')),
                ('contact_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Телефон')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('country', models.CharField(default='Казахстан', max_length=100, verbose_name='Страна')),
                ('subscription_status', models.CharField(choices=[('trial', 'Пробный период'), ('active', 'Активна'), ('expired', 'Истекла'), ('cancelled', 'Отменена'), ('suspended', 'Приостановлена')], default='trial', max_length=20, verbose_name='Статус подписки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True, verbose_name='Окончание пробного периода')),
                ('subscription_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Окончание подписки')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Логотип')),
                ('primary_color', models.CharField(default='#007bff', max_length=7, verbose_name='Основной цвет')),
                ('secondary_color', models.CharField(default='#6c757d', max_length=7, verbose_name='Дополнительный цвет')),
                ('custom_domain', models.CharField(blank=True, max_length=200, verbose_name='Собственный домен')),
                ('telegram_chat_id', models.CharField(blank=True, max_length=50, verbose_name='Telegram Chat ID')),
                ('telegram_enabled', models.BooleanField(default=False, verbose_name='Telegram уведомления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Номер счета')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Валюта')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('pending', 'Ожидает оплаты'), ('paid', 'Оплачен'), ('cancelled', 'Отменен'), ('failed', 'Ошибка оплаты'), ('refunded', 'Возврат')], default='pending', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Оплачен')),
                ('due_date', models.DateField(verbose_name='Срок оплаты')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('payment_method', models.CharField(blank=True, max_length=50, verbose_name='Способ оплаты')),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счета',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('billing_period', models.CharField(choices=[('monthly', 'Ежемесячно'), ('yearly', 'Ежегодно')], default='monthly', max_length=20, verbose_name='Период оплаты')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачена')),
                ('auto_renew', models.BooleanField(default=True, verbose_name='Автопродление')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Отменена')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Код')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в месяц (USD)')),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена в год (USD)')),
                ('max_objects', models.IntegerField(default=5, verbose_name='Макс. объектов')),
                ('max_systems', models.IntegerField(default=10, verbose_name='Макс. систем')),
                ('max_users', models.IntegerField(default=5, verbose_name='Макс. пользователей')),
                ('max_data_retention_days', models.IntegerField(default=30, verbose_name='Хранение данных (дней)')),
                ('has_api_access', models.BooleanField(default=False, verbose_name='Доступ к API')),
                ('has_telegram_notifications', models.BooleanField(default=False, verbose_name='Telegram уведомления')),
                ('has_email_notifications', models.BooleanField(default=True, verbose_name='Email уведомления')),
                ('has_custom_reports', models.BooleanField(default=False, verbose_name='Кастомные отчеты')),
                ('has_white_label', models.BooleanField(default=False, verbose_name='White-label')),
                ('has_priority_support', models.BooleanField(default=False, verbose_name='Приоритетная поддержка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_public', models.BooleanField(default=True, verbose_name='Показывать на сайте')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Тарифный план',
                'verbose_name_plural': 'Тарифные планы',
                'ordering': ['sort_order', 'price_monthly'],
            },
        ),
        migrations.AlterModelOptions(
            name='atributes',
            options={'ordering': ['sys', 'name'], 'verbose_name': 'Атрибут', 'verbose_name_plural': 'Атрибуты'},
        ),
        migrations.AlterModelOptions(
            name='data',
            options={'ordering': ['-date'], 'verbose_name': 'Данные', 'verbose_name_plural': 'Данные'},
        ),
        migrations.AlterModelOptions(
            name='obj',
            options={'ordering': ['company', 'obj'], 'verbose_name': 'Объект', 'verbose_name_plural': 'Объекты'},
        ),
        migrations.AlterModelOptions(
            name='system',
            options={'ordering': ['obj', 'name'], 'verbose_name': 'Система', 'verbose_name_plural': 'Системы'},
        ),
        migrations.AlterModelOptions(
            name='user_profile',
            options={'ordering': ['company', 'email'], 'verbose_name': 'Пользователь', 'verbose_name_plural': 'Пользователи'},
        ),
        migrations.AddField(
            model_name='atributes',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='atributes',
            name='max_value',
            field=models.FloatField(blank=True, null=True, verbose_name='Макс. значение'),
        ),
        migrations.AddField(
            model_name='atributes',
            name='min_value',
            field=models.FloatField(blank=True, null=True, verbose_name='Мин. значение'),
        ),
        migrations.AddField(
            model_name='obj',
            name='address',
            field=models.CharField(blank=True, max_length=300, verbose_name='Адрес'),
        ),
        migrations.AddField(
            model_name='obj',
            name='city',
            field=models.CharField(blank=True, max_length=100, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='obj',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='obj',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активен'),
        ),
        migrations.AddField(
            model_name='obj',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта'),
        ),
        migrations.AddField(
            model_name='obj',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота'),
        ),
        migrations.AddField(
            model_name='system',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='system',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активна'),
        ),
        migrations.AddField(
            model_name='system',
            name='is_online',
            field=models.BooleanField(default=False, verbose_name='В сети'),
        ),
        migrations.AddField(
            model_name='system',
            name='last_poll_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Последний опрос'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='department',
            field=models.CharField(blank=True, max_length=100, verbose_name='Отдел'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='email_notifications',
            field=models.BooleanField(default=True, verbose_name='Email уведомления'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='position',
            field=models.CharField(blank=True, max_length=100, verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='role',
            field=models.CharField(choices=[('company_admin', 'Администратор компании'), ('operator', 'Оператор'), ('viewer', 'Наблюдатель')], default='operator', max_length=20, verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='telegram_chat_id',
            field=models.CharField(blank=True, max_length=50, verbose_name='Telegram Chat ID'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='telegram_notifications',
            field=models.BooleanField(default=False, verbose_name='Telegram уведомления'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='alarm_atr',
            field=models.BooleanField(default=False, verbose_name='Тревожный параметр'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='carel_reg',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Переменная CAREL'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создан'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='modbus_carel',
            field=models.BooleanField(verbose_name='Modbus/CAREL'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='register',
            field=models.IntegerField(blank=True, null=True, verbose_name='Регистр Modbus'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='sys',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.system', verbose_name='Система'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='uom',
            field=models.CharField(max_length=10, verbose_name='Единица измерения'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлен'),
        ),
        migrations.AlterField(
            model_name='atributes',
            name='write',
            field=models.BooleanField(default=False, verbose_name='Запись разрешена'),
        ),
        migrations.AlterField(
            model_name='data',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создана'),
        ),
        migrations.AlterField(
            model_name='data',
            name='date',
            field=models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата/время'),
        ),
        migrations.AlterField(
            model_name='data',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.atributes', verbose_name='Атрибут'),
        ),
        migrations.AlterField(
            model_name='data',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлена'),
        ),
        migrations.AlterField(
            model_name='data',
            name='value',
            field=models.FloatField(blank=True, null=True, verbose_name='Значение'),
        ),
        migrations.AlterField(
            model_name='obj',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создан'),
        ),
        migrations.AlterField(
            model_name='obj',
            name='obj',
            field=models.CharField(max_length=200, verbose_name='Название объекта'),
        ),
        migrations.AlterField(
            model_name='obj',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлен'),
        ),
        migrations.AlterField(
            model_name='obj',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь (устаревшее)'),
        ),
        migrations.AlterField(
            model_name='system',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создана'),
        ),
        migrations.AlterField(
            model_name='system',
            name='ipaddr',
            field=models.GenericIPAddressField(protocol='IPv4', verbose_name='IP адрес'),
        ),
        migrations.AlterField(
            model_name='system',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Название системы'),
        ),
        migrations.AlterField(
            model_name='system',
            name='obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.obj', verbose_name='Объект'),
        ),
        migrations.AlterField(
            model_name='system',
            name='period',
            field=models.DurationField(default=datetime.timedelta(seconds=5), verbose_name='Период опроса'),
        ),
        migrations.AlterField(
            model_name='system',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлена'),
        ),
        migrations.AlterField(
            model_name='user_profile',
            name='phone_number',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Телефон'),
        ),
        migrations.AddIndex(
            model_name='data',
            index=models.Index(fields=['name', '-date'], name='data_data_name_id_03519c_idx'),
        ),
        migrations.AddIndex(
            model_name='data',
            index=models.Index(fields=['-date'], name='data_data_date_50d55a_idx'),
        ),
        migrations.AddIndex(
            model_name='system',
            index=models.Index(fields=['obj', 'is_active'], name='data_system_obj_id_834398_idx'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.atributes', verbose_name='Атрибут'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['subscription_status', 'is_active'], name='data_compan_subscri_79b49b_idx'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='obj',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='user_profile',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='Компания'),
        ),
        migrations.AddIndex(
            model_name='obj',
            index=models.Index(fields=['company', 'is_active'], name='data_obj_company_c9d2a8_idx'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='company',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.subscription', verbose_name='Подписка'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='data.subscriptionplan', verbose_name='Тарифный план'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status', 'due_date'], name='data_invoic_status_68fd41_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company', 'status'], name='data_invoic_company_80151e_idx'),
        ),
    ]
