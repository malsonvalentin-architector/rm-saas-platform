# Generated by Django 5.2.7 on 2025-10-22 13:27

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0012_phase_44_actuators'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModbusConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Например: CAREL pCO Emulator', max_length=100, verbose_name='Название подключения')),
                ('host', models.CharField(help_text='IP адрес или hostname (например: localhost, 192.168.11.101)', max_length=255, verbose_name='Хост')),
                ('port', models.IntegerField(default=502, help_text='Стандартный Modbus TCP порт: 502', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Порт')),
                ('protocol', models.CharField(choices=[('tcp', 'Modbus TCP'), ('rtu', 'Modbus RTU over TCP')], default='tcp', max_length=10, verbose_name='Протокол')),
                ('slave_id', models.IntegerField(default=1, help_text='ID устройства (обычно 1)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(247)], verbose_name='Slave ID')),
                ('timeout', models.IntegerField(default=3, help_text='Таймаут подключения', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)], verbose_name='Таймаут (секунды)')),
                ('poll_interval', models.IntegerField(default=10, help_text='Как часто читать данные', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3600)], verbose_name='Интервал опроса (секунды)')),
                ('enabled', models.BooleanField(default=True, help_text='Включить/выключить опрос этого подключения', verbose_name='Активно')),
                ('description', models.TextField(blank=True, help_text='Дополнительная информация', verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Modbus подключение',
                'verbose_name_plural': 'Modbus подключения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModbusConnectionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Успешно'), ('error', 'Ошибка'), ('timeout', 'Таймаут')], max_length=20, verbose_name='Статус')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('registers_read', models.IntegerField(default=0, verbose_name='Прочитано регистров')),
                ('duration_ms', models.IntegerField(default=0, verbose_name='Длительность (мс)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='data.modbusconnection', verbose_name='Подключение')),
            ],
            options={
                'verbose_name': 'Лог Modbus',
                'verbose_name_plural': 'Логи Modbus',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='data_modbus_created_996bf5_idx'), models.Index(fields=['connection', '-created_at'], name='data_modbus_connect_5be95f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ModbusRegisterMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_name', models.CharField(blank=True, help_text='Название датчика/параметра', max_length=255, verbose_name='Имя датчика')),
                ('register_type', models.CharField(choices=[('holding', 'Holding Register (40001+)'), ('input', 'Input Register (30001+)'), ('coil', 'Coil (00001+)'), ('discrete', 'Discrete Input (10001+)')], max_length=20, verbose_name='Тип регистра')),
                ('address', models.IntegerField(help_text='0-based адрес (например: 0 = 40001)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(65535)], verbose_name='Адрес регистра')),
                ('data_type', models.CharField(choices=[('int16', 'Int16 (signed)'), ('uint16', 'UInt16 (unsigned)'), ('int32', 'Int32 (2 registers)'), ('uint32', 'UInt32 (2 registers)'), ('float32', 'Float32 (2 registers)'), ('bool', 'Boolean')], default='int16', max_length=20, verbose_name='Тип данных')),
                ('scale_factor', models.FloatField(default=1.0, help_text='Умножить значение на этот коэффициент (например: 0.1 для деления на 10)', verbose_name='Масштабный коэффициент')),
                ('offset', models.FloatField(default=0.0, help_text='Добавить к значению после масштабирования', verbose_name='Смещение')),
                ('enabled', models.BooleanField(default=True, verbose_name='Активно')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='register_maps', to='data.modbusconnection', verbose_name='Modbus подключение')),
            ],
            options={
                'verbose_name': 'Modbus регистр',
                'verbose_name_plural': 'Modbus регистры',
                'ordering': ['connection', 'address'],
                'unique_together': {('connection', 'register_type', 'address')},
            },
        ),
    ]
