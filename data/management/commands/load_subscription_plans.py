"""
Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –∏ –º–æ–¥—É–ª–µ–π
python manage.py load_subscription_plans
"""

from django.core.management.base import BaseCommand
from data.models import SubscriptionPlan, AddonModule
from decimal import Decimal


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏'

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤...\n')
        
        # ====================================================================
        # –ë–ê–ó–û–í–´–ï –¢–ê–†–ò–§–ù–´–ï –ü–õ–ê–ù–´
        # ====================================================================
        
        plans_data = [
            {
                'name': 'BASIC',
                'slug': 'basic',
                'description': '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
                'price_monthly': Decimal('99.00'),
                'price_yearly': Decimal('950.40'),  # 20% —Å–∫–∏–¥–∫–∞: 99*12*0.8
                'max_objects': 3,
                'max_systems': 10,
                'max_users': 5,
                'max_data_retention_days': 30,
                'has_api_access': False,
                'has_custom_reports': False,
                'has_white_label': False,
                'has_priority_support': False,
                'has_sla': False,
                'sort_order': 1,
                'is_featured': False,
            },
            {
                'name': 'PROFESSIONAL',
                'slug': 'professional',
                'description': '–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏',
                'price_monthly': Decimal('299.00'),
                'price_yearly': Decimal('2870.40'),  # 20% —Å–∫–∏–¥–∫–∞
                'max_objects': 10,
                'max_systems': 50,
                'max_users': 20,
                'max_data_retention_days': 90,
                'has_api_access': True,
                'has_custom_reports': True,
                'has_white_label': False,
                'has_priority_support': True,
                'has_sla': False,
                'sort_order': 2,
                'is_featured': True,  # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π!
            },
            {
                'name': 'ENTERPRISE',
                'slug': 'enterprise',
                'description': '–î–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏',
                'price_monthly': Decimal('799.00'),
                'price_yearly': Decimal('7670.40'),  # 20% —Å–∫–∏–¥–∫–∞
                'max_objects': 999,  # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –±–µ–∑–ª–∏–º–∏—Ç
                'max_systems': 999,
                'max_users': 999,
                'max_data_retention_days': 365,
                'has_api_access': True,
                'has_custom_reports': True,
                'has_white_label': True,
                'has_priority_support': True,
                'has_sla': True,
                'sort_order': 3,
                'is_featured': False,
            },
        ]
        
        for plan_data in plans_data:
            plan, created = SubscriptionPlan.objects.update_or_create(
                slug=plan_data['slug'],
                defaults=plan_data
            )
            
            if created:
                self.stdout.write(self.style.SUCCESS(f'  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω: {plan.name} (${plan.price_monthly}/–º–µ—Å)'))
            else:
                self.stdout.write(self.style.WARNING(f'  ‚ôªÔ∏è  –û–±–Ω–æ–≤–ª—ë–Ω –ø–ª–∞–Ω: {plan.name}'))
        
        self.stdout.write('\n')
        
        # ====================================================================
        # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ú–û–î–£–õ–ò
        # ====================================================================
        
        self.stdout.write('üéÅ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...\n')
        
        modules_data = [
            # ------ AI CHAT ASSISTANT ------
            {
                'module_type': 'ai_assistant',
                'tier': 'starter',
                'name': 'AI Assistant Starter',
                'description': '–ë–∞–∑–æ–≤—ã–π AI –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã',
                'price_monthly': Decimal('43.00'),
                'ai_requests_limit': 500,
                'sort_order': 1,
                'is_coming_soon': True,  # –ü–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
            },
            {
                'module_type': 'ai_assistant',
                'tier': 'professional',
                'name': 'AI Assistant Professional',
                'description': '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π AI —Å —É–≥–ª—É–±–ª—ë–Ω–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º',
                'price_monthly': Decimal('98.00'),
                'ai_requests_limit': 2000,
                'sort_order': 2,
                'is_coming_soon': True,
            },
            {
                'module_type': 'ai_assistant',
                'tier': 'enterprise',
                'name': 'AI Assistant Enterprise',
                'description': '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π AI —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                'price_monthly': Decimal('217.00'),
                'ai_requests_limit': None,  # –ë–µ–∑–ª–∏–º–∏—Ç
                'sort_order': 3,
                'is_coming_soon': True,
            },
            
            # ------ PREDICTIVE ANALYTICS ------
            {
                'module_type': 'predictive',
                'tier': 'basic',
                'name': 'Predictive Analytics Basic',
                'description': '–ë–∞–∑–æ–≤–æ–µ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
                'price_monthly': Decimal('65.00'),
                'prediction_accuracy': 70,
                'prediction_days': 7,
                'sort_order': 4,
                'is_coming_soon': True,
            },
            {
                'module_type': 'predictive',
                'tier': 'pro',
                'name': 'Predictive Analytics Pro',
                'description': '–¢–æ—á–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã —Å –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º',
                'price_monthly': Decimal('152.00'),
                'prediction_accuracy': 85,
                'prediction_days': 14,
                'sort_order': 5,
                'is_coming_soon': True,
            },
            {
                'module_type': 'predictive',
                'tier': 'enterprise',
                'name': 'Predictive Analytics Enterprise',
                'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã',
                'price_monthly': Decimal('326.00'),
                'prediction_accuracy': 90,
                'prediction_days': 21,
                'sort_order': 6,
                'is_coming_soon': True,
            },
            
            # ------ AUTONOMOUS OPTIMIZATION ------
            {
                'module_type': 'optimization',
                'tier': 'basic',
                'name': 'Autonomous Optimization Basic',
                'description': '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è',
                'price_monthly': Decimal('109.00'),
                'energy_saving_min': 10,
                'energy_saving_max': 15,
                'automation_level': 'Recommendations only',
                'sort_order': 7,
                'is_coming_soon': True,
            },
            {
                'module_type': 'optimization',
                'tier': 'pro',
                'name': 'Autonomous Optimization Pro',
                'description': '–ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –≤–∞—à–∏–º –æ–¥–æ–±—Ä–µ–Ω–∏–µ–º',
                'price_monthly': Decimal('261.00'),
                'energy_saving_min': 15,
                'energy_saving_max': 20,
                'automation_level': 'Semi-autonomous',
                'sort_order': 8,
                'is_coming_soon': True,
            },
            {
                'module_type': 'optimization',
                'tier': 'enterprise',
                'name': 'Autonomous Optimization Enterprise',
                'description': '–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 24/7',
                'price_monthly': Decimal('543.00'),
                'energy_saving_min': 20,
                'energy_saving_max': 30,
                'automation_level': 'Fully autonomous',
                'sort_order': 9,
                'is_coming_soon': True,
            },
        ]
        
        for module_data in modules_data:
            module, created = AddonModule.objects.update_or_create(
                module_type=module_data['module_type'],
                tier=module_data['tier'],
                defaults=module_data
            )
            
            status = 'üîú Coming Soon' if module.is_coming_soon else '‚úÖ Active'
            
            if created:
                self.stdout.write(
                    self.style.SUCCESS(
                        f'  ‚úÖ –°–æ–∑–¥–∞–Ω –º–æ–¥—É–ª—å: {module.name} (${module.price_monthly}/–º–µ—Å) {status}'
                    )
                )
            else:
                self.stdout.write(
                    self.style.WARNING(
                        f'  ‚ôªÔ∏è  –û–±–Ω–æ–≤–ª—ë–Ω –º–æ–¥—É–ª—å: {module.name} {status}'
                    )
                )
        
        self.stdout.write('\n')
        self.stdout.write(self.style.SUCCESS('üéâ –í—Å–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –∏ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!'))
        self.stdout.write('\n')
        self.stdout.write('üìä –ò—Ç–æ–≥–æ:')
        self.stdout.write(f'  ‚Ä¢ –ë–∞–∑–æ–≤—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤: {SubscriptionPlan.objects.count()}')
        self.stdout.write(f'  ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π: {AddonModule.objects.count()}')
        self.stdout.write(f'    - AI Assistant: {AddonModule.objects.filter(module_type="ai_assistant").count()}')
        self.stdout.write(f'    - Predictive Analytics: {AddonModule.objects.filter(module_type="predictive").count()}')
        self.stdout.write(f'    - Autonomous Optimization: {AddonModule.objects.filter(module_type="optimization").count()}')
