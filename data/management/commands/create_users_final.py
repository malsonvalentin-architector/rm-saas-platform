"""
Management command –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ProMonitor
Usage: python manage.py create_users_final
"""
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from data.models import Company

User = get_user_model()


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ProMonitor —Å –Ω—É–∂–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏'

    def handle(self, *args, **options):
        self.stdout.write(self.style.WARNING('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ProMonitor...\n'))
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è demo –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        demo_company, _ = Company.objects.get_or_create(
            name='ProMonitor Demo',
            defaults={
                'description': '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
                'is_active': True
            }
        )
        
        # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
        users_data = [
            {
                'email': 'superadmin@promonitor.kz',
                'password': 'Super123!',
                'role': 'superadmin',
                'first_name': 'Super',
                'last_name': 'Admin',
                'company': None,  # Superadmin –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–º–ø–∞–Ω–∏–∏
                'is_staff': True,
                'is_superuser': True,
            },
            {
                'email': 'admin@promonitor.kz',
                'password': 'Vika2025',
                'role': 'admin',
                'first_name': 'Vika',
                'last_name': 'Administrator',
                'company': demo_company,
                'is_staff': True,
                'is_superuser': False,
            },
            {
                'email': 'manager@promonitor.kz',
                'password': 'Vika2025',
                'role': 'manager',
                'first_name': 'Vika',
                'last_name': 'Manager',
                'company': demo_company,
                'is_staff': False,
                'is_superuser': False,
            },
            {
                'email': 'client@promonitor.kz',
                'password': 'Client123!',
                'role': 'client',
                'first_name': 'Client',
                'last_name': 'User',
                'company': demo_company,
                'is_staff': False,
                'is_superuser': False,
            },
        ]
        
        created_count = 0
        updated_count = 0
        
        for user_data in users_data:
            email = user_data['email']
            password = user_data.pop('password')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            try:
                user = User.objects.get(email=email)
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                for key, value in user_data.items():
                    setattr(user, key, value)
                user.set_password(password)
                user.save()
                
                self.stdout.write(
                    self.style.SUCCESS(f'‚úì –û–±–Ω–æ–≤–ª–µ–Ω: {email} (—Ä–æ–ª—å: {user_data["role"]})')
                )
                updated_count += 1
                
            except User.DoesNotExist:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user = User(**user_data)
                user.set_password(password)
                user.save()
                
                self.stdout.write(
                    self.style.SUCCESS(f'‚úì –°–æ–∑–¥–∞–Ω: {email} (—Ä–æ–ª—å: {user_data["role"]})')
                )
                created_count += 1
        
        self.stdout.write(self.style.SUCCESS(f'\n‚úÖ –ì–æ—Ç–æ–≤–æ!'))
        self.stdout.write(self.style.SUCCESS(f'   –°–æ–∑–¥–∞–Ω–æ: {created_count}'))
        self.stdout.write(self.style.SUCCESS(f'   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}'))
        self.stdout.write(self.style.WARNING(f'\nüìã –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:'))
        self.stdout.write('   superadmin@promonitor.kz / Super123! (–≤—Å–µ –ø—Ä–∞–≤–∞)')
        self.stdout.write('   admin@promonitor.kz / Vika2025 (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–æ–º–ø–∞–Ω–∏–∏)')
        self.stdout.write('   manager@promonitor.kz / Vika2025 (–º–µ–Ω–µ–¥–∂–µ—Ä)')
        self.stdout.write('   client@promonitor.kz / Client123! (–∫–ª–∏–µ–Ω—Ç)\n')
