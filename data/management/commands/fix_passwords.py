# data/management/commands/fix_passwords.py
"""
Management command –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
Usage: python manage.py fix_passwords
"""
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model

User = get_user_model()

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞—Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∂–µ–ª–∞–µ–º—ã–µ'

    def handle(self, *args, **options):
        self.stdout.write(self.style.WARNING('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...'))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏
        password_updates = [
            ('superadmin@promonitor.kz', 'Super123!'),
            ('admin@promonitor.kz', 'Vika2025'),      # –ñ–µ–ª–∞–µ–º—ã–π –ø–∞—Ä–æ–ª—å
            ('manager@promonitor.kz', 'Vika2025'),    # –ñ–µ–ª–∞–µ–º—ã–π –ø–∞—Ä–æ–ª—å
            ('client@promonitor.kz', 'Client123!'),
        ]
        
        updated_count = 0
        for email, password in password_updates:
            try:
                user = User.objects.get(email=email)
                user.set_password(password)
                user.save()
                self.stdout.write(
                    self.style.SUCCESS(f'  ‚úì –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è {email}')
                )
                updated_count += 1
            except User.DoesNotExist:
                self.stdout.write(
                    self.style.WARNING(f'  ‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                )
        
        self.stdout.write(
            self.style.SUCCESS(f'\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–∞—Ä–æ–ª–µ–π: {updated_count}/{len(password_updates)}')
        )
        self.stdout.write(self.style.SUCCESS('üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤—Ö–æ–¥–∏—Ç—å —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏.'))
